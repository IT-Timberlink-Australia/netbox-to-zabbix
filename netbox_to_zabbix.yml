---
- name: Sync NetBox devices to Zabbix
  hosts: all
  gather_facts: false
  vars:
    zabbix_api_url: "{{ lookup('env', 'ZABBIX_API_URL') }}"
    zabbix_api_token: "{{ lookup('env', 'ZABBIX_API_TOKEN') }}"

  tasks:
    - name: Verify inventory data
      debug:
        msg: |
          Device: {{ inventory_hostname }}
          IP: {{ ansible_host }}
          Description: "{{ description | default('Not provided') }}"
          Site ID: {{ site_id }}
          Site Slug: {{ site_slug }}
          Template Name: {{ zabbix_template_name }}
      run_once: true

    - name: Ensure Zabbix template name is defined
      assert:
        that:
          - zabbix_template_name is defined
          - zabbix_template_name | length > 0
        fail_msg: "Missing Zabbix template name for {{ inventory_hostname }}"

    - name: Lookup Zabbix template ID by name
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: |
          {
            "jsonrpc": "2.0",
            "method": "template.get",
            "params": {
              "output": ["templateid"],
              "filter": {
                "host": "{{ zabbix_template_name }}"
              }
            },
            "auth": "{{ zabbix_api_token }}",
            "id": 1
          }
        validate_certs: no
      delegate_to: localhost
      register: zabbix_template_lookup
      failed_when: zabbix_template_lookup.json.result | length == 0

    - name: Set Zabbix template ID
      set_fact:
        template_id: "{{ zabbix_template_lookup.json.result[0].templateid }}"

    - name: Determine proxy ID
      set_fact:
        proxy_id: "{{ site_to_proxy_mapping[site_id | string] | default(site_to_proxy_mapping['_default']) }}"

    - name: Notify if no proxy is assigned
      debug:
        msg: "No Zabbix proxy assigned for {{ inventory_hostname }} (Site ID: {{ site_id }})"
      when: proxy_id | length == 0

    - name: Determine interface configuration
      set_fact:
        interface_config: |
          {% if 'agent' in zabbix_template_name | lower %}
          [{
            "type": 1,
            "main": 1,
            "useip": 1,
            "ip": "{{ ansible_host }}",
            "dns": "",
            "port": "161"
          }]
          {% elif 'snmp' in zabbix_template_name | lower %}
          [{
            "type": 2,
            "main": 1,
            "useip": 1,
            "ip": "{{ ansible_host }}",
            "dns": "",
            "port": "161",
            "details": {
              "version": 2,
              "community": "{$SNMP_COMMUNITY}"
            }
          }]
          {% else %}
          [{
            "type": 3,
            "main": 1,
            "useip": 1,
            "ip": "{{ ansible_host }}",
            "dns": "",
            "port": "623"
          }]
          {% endif %}

    - name: Get existing host from Zabbix
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: |
          {
            "jsonrpc": "2.0",
            "method": "host.get",
            "params": {
              "output": ["hostid", "name", "proxy_hostid"],
              "filter": {
                "host": "{{ inventory_hostname }}"
              }
            },
            "auth": "{{ zabbix_api_token }}",
            "id": 1
          }
        validate_certs: no
      delegate_to: localhost
      register: zabbix_host_check

    - name: Set visible name
      set_fact:
        visible_name: "{{ inventory_hostname }}{% if description is defined and description|length > 0 %} - {{ description | trim }}{% endif %}"

    - name: Create new host in Zabbix
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: |
          {
            "jsonrpc": "2.0",
            "method": "host.create",
            "params": {
              "host": "{{ inventory_hostname }}",
              "name": "{{ visible_name }}",
              "interfaces": {{ interface_config | from_yaml }},
              "groups": [{
                "groupid": "{{ site_to_group_mapping[site_slug] | default(site_to_group_mapping['_default']) }}"
              }],
              "templates": [{
                "templateid": "{{ template_id }}"
              }]
              {% if proxy_id is defined and proxy_id | length > 0 %},
              "proxy_hostid": "{{ proxy_id }}"
              {% endif %}
            },
            "auth": "{{ zabbix_api_token }}",
            "id": 1
          }
        validate_certs: no
      delegate_to: localhost
      register: host_creation
      when: zabbix_host_check.json.result | length == 0

    - name: Update existing host in Zabbix
      uri:
        url: "{{ zabbix_api_url }}"
        method: POST
        headers:
          Content-Type: "application/json"
        body_format: json
        body: |
          {
            "jsonrpc": "2.0",
            "method": "host.update",
            "params": {
              "hostid": "{{ zabbix_host_check.json.result[0].hostid }}",
              "name": "{{ visible_name }}",
              "interfaces": {{ interface_config | from_yaml }},
              "groups": [{
                "groupid": "{{ site_to_group_mapping[site_slug] | default(site_to_group_mapping['_default']) }}"
              }],
              "templates": [{
                "templateid": "{{ template_id }}"
              }]
              {% if proxy_id is defined and proxy_id | length > 0 %},
              "proxy_hostid": "{{ proxy_id }}"
              {% endif %}
            },
            "auth": "{{ zabbix_api_token }}",
            "id": 1
          }
        validate_certs: no
      delegate_to: localhost
      register: host_update
      when: zabbix_host_check.json.result | length > 0

    - name: Show sync result
      debug:
        msg: |
          Zabbix Sync Result for {{ inventory_hostname }}:
          {% if zabbix_host_check.json.result | length > 0 %}
          Action: Update
          Status: {{ 'Success' if host_update is defined and not host_update.failed else 'Failed' }}
          Response: {{ host_update.json | default('No response') }}
          {% else %}
          Action: Create
          Status: {{ 'Success' if host_creation is defined and not host_creation.failed else 'Failed' }}
          Response: {{ host_creation.json | default('No response') }}
          {% endif %}
          Visible Name: "{{ visible_name }}"
          Interface Type: {{ 'SNMP v2' if 'snmp' in zabbix_template_name | lower else 'IPMI' }}
          Template ID: {{ template_id }}
          Proxy ID: {{ proxy_id }}
      when: (host_creation is defined or host_update is defined)